@model IPagedList<SD_340_W22SD_Final_Project_Group6.Models.Project>
@using X.PagedList;
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Bootstrap4;

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}


<div style="display: flex; flex-direction: row; justify-content: space-between; align-items: center; margin-bottom: 1rem">
	<div style="display: flex; align-content: center; gap: .5rem">
		<h4 style="display: inline">Projects</h4>
		<a asp-action="Create" class="btn" style="background-color: #E4BCB9">Create New</a>
		<a asp-action="Index" asp-route-sortOrder="default" class="btn" style="background-color: #E4BCB9" name="sortOrder">Show All</a>
		<a asp-action="Index" asp-route-sortOrder="Completed" class="btn" style="background-color: #E4BCB9" name="sortOrder">Show Completed</a>
		<form asp-action="Index">
			<div class="form-group" style="display: inline">
				<input type="submit" value="Filter by User" class="btn" style="background-color: #E4BCB9" />
			</div>
			<div class="form-group" style="display: inline">
				<select name="userId" asp-items=@ViewBag.Users></select>
				<span class="text-danger"></span>
			</div>
		</form>
	</div>

	<div style="display: flex">
		<div>
			<p style="display: inline">Sort Priority:</p>
			<a asp-action="Index" asp-route-sortOrder="Priority" asp-route-sort=true name="sortOrder">&#128077</a>
			<a asp-action="Index" asp-route-sortOrder="Priority" asp-route-sort=false name="sortOrder">&#128078</a>
		</div>
		<div>
			<p style="display: inline">Sort Required Hrs:</p>
			<a asp-action="Index" asp-route-sortOrder="RequiredHrs" asp-route-sort=true name="sortOrder">&#128077</a>
			<a asp-action="Index" asp-route-sortOrder="RequiredHrs" asp-route-sort=false name="sortOrder">&#128078</a>
		</div>
	</div>


</div>


<div>
	@foreach (var item in Model)
	{
		<div style="margin-bottom: 2rem; border: 1px solid gray; border-radius: 10px; padding: 1rem; background-color: white">
			<div style="display:flex; flex-direction: row; justify-content: space-between; border-bottom: solid 1px gray; padding-bottom: 1rem; margin-bottom: 1rem">
				<h4>Project Name: @item.ProjectName</h4>
				<h4>Created By: @item.CreatedBy</h4>
				<h4>Assigned To</h4>
				<ol>
					@foreach (var user in item.AssignedTo)
					{
						<li>@user.ApplicationUser.UserName</li>
					}
				</ol>
				<div>
					<form>
						<input asp-action="Edit" asp-controller="Projects" asp-route-id=@item.Id type="submit" class="btn btn-dark" value="Edit" />
						<input asp-action="Delete" asp-controller="Projects" asp-route-id=@item.Id type="submit" class="btn btn-danger" value="Delete" />
					</form>
				</div>

			</div>


			<h4>Tickets</h4>


			<table class="table">
				<thead>
					<tr>
						<th>Ticket Name</th>
						<th>Owner</th>
						<th>Required Hours</th>
						<th>Priority</th>

						<th>Watching</th>
						<th>Completed</th>
						<th>Settings</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var ticket in item.Tickets)
					{
						<tr>
							<td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id">@ticket.Title</a></td>
							<td>@ticket.Owner</td>
							<td>@ticket.RequiredHours</td>
							<td>@ticket.TicketPriority</td>

							@if (ticket.TicketWatchers.Any(tw => tw.Watcher.UserName == User.Identity.Name) || User.Identity.Name == ticket.Owner.UserName)
							{
								<td>&#9989</td>
							}
							else
							{
								<td></td>
							}

							@if (ticket.Completed == true)
							{
								<td>&#10024</td>
							}
							else
							{
								<td></td>
							}

							<td>
								<a asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id">&#9999</a> |
								<a asp-action="Delete" asp-controller="Tickets" asp-route-id="@ticket.Id">&#128465</a>
							</td>
						</tr>
					}

				</tbody>
			</table>
			<p>
				<a asp-action="Create" asp-controller="Tickets" asp-route-projId="@item.Id" name="projId" class="btn" style="background-color: #E4BCB9">Create New Ticket</a>
			</p>
		</div>
	}

</div>
<div>
	@Html.PagedListPager(Model, page => Url.Action("Index", new { page }), Bootstrap4PagedListRenderOptions.PageNumbersOnly)
</div>


